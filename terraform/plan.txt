[32m  [32m+[0m [32maws_iam_policy_attachment.attach_lambda_policy_firehose
[0m      id:                                                                                            <computed>
      name:                                                                                          "attach_s3_policy_firehoes"
      policy_arn:                                                                                    "${module.invoke_lambda_policy.arn}"
      roles.#:                                                                                       "1"
      roles.1230557816:                                                                              "FirehoseIamRole"
[0m
[0m[32m  [32m+[0m [32maws_iam_policy_attachment.attach_s3_policy_firehose
[0m      id:                                                                                            <computed>
      name:                                                                                          "attach_s3_policy_firehoes"
      policy_arn:                                                                                    "arn:aws:iam::049050937109:policy/S3ReadWrite"
      roles.#:                                                                                       "1"
      roles.1230557816:                                                                              "FirehoseIamRole"
[0m
[0m[32m  [32m+[0m [32maws_kinesis_firehose_delivery_stream.test_stream
[0m      id:                                                                                            <computed>
      arn:                                                                                           <computed>
      destination:                                                                                   "redshift"
      destination_id:                                                                                <computed>
      name:                                                                                          "terraform-kinesis-firehose-test-stream"
      redshift_configuration.#:                                                                      "1"
      redshift_configuration.0.cloudwatch_logging_options.#:                                         <computed>
      redshift_configuration.0.cluster_jdbcurl:                                                      "jdbc:redshift://crypto-data-cluster.chztkbjehhlk.ap-southeast-1.redshift.amazonaws.com:5439/mydb"
      redshift_configuration.0.data_table_columns:                                                   "data,high,low,\"open\",close,volume,quoteVolume,weightedAverage"
      redshift_configuration.0.data_table_name:                                                      "ethusdt"
      redshift_configuration.0.password:                                                             <sensitive>
      redshift_configuration.0.processing_configuration.#:                                           "1"
      redshift_configuration.0.processing_configuration.0.enabled:                                   "true"
      redshift_configuration.0.processing_configuration.0.processors.#:                              "1"
      redshift_configuration.0.processing_configuration.0.processors.0.parameters.#:                 "1"
      redshift_configuration.0.processing_configuration.0.processors.0.parameters.0.parameter_name:  "LambdaArn"
      redshift_configuration.0.processing_configuration.0.processors.0.parameters.0.parameter_value: "${aws_lambda_function.process_data.arn}:$LATEST"
      redshift_configuration.0.processing_configuration.0.processors.0.type:                         "Lambda"
      redshift_configuration.0.retry_duration:                                                       "3600"
      redshift_configuration.0.role_arn:                                                             "${module.firehose_iam_role.arn}"
      redshift_configuration.0.s3_backup_mode:                                                       "Disabled"
      redshift_configuration.0.username:                                                             "vitalik"
      s3_configuration.#:                                                                            "1"
      s3_configuration.0.bucket_arn:                                                                 "${aws_s3_bucket.bucket.arn}"
      s3_configuration.0.buffer_interval:                                                            "400"
      s3_configuration.0.buffer_size:                                                                "10"
      s3_configuration.0.cloudwatch_logging_options.#:                                               <computed>
      s3_configuration.0.compression_format:                                                         "GZIP"
      s3_configuration.0.role_arn:                                                                   "${module.firehose_iam_role.arn}"
      version_id:                                                                                    <computed>
[0m
[0m[32m  [32m+[0m [32maws_lambda_function.process_data
[0m      id:                                                                                            <computed>
      arn:                                                                                           <computed>
      filename:                                                                                      "etl.py"
      function_name:                                                                                 "etl"
      handler:                                                                                       "etl.lambda_handler"
      invoke_arn:                                                                                    <computed>
      last_modified:                                                                                 <computed>
      memory_size:                                                                                   "128"
      publish:                                                                                       "false"
      qualified_arn:                                                                                 <computed>
      role:                                                                                          "${module.firehose_iam_role.arn}"
      runtime:                                                                                       "python3.6"
      source_code_hash:                                                                              "2GHw6R5DzlfvKajK/MtIw9jN/FSZ7lsrdOl0rdSiRWQ="
      source_code_size:                                                                              <computed>
      timeout:                                                                                       "60"
      tracing_config.#:                                                                              <computed>
      version:                                                                                       <computed>
[0m
[0m[32m  [32m+[0m [32maws_s3_bucket.bucket
[0m      id:                                                                                            <computed>
      acceleration_status:                                                                           <computed>
      acl:                                                                                           "private"
      arn:                                                                                           <computed>
      bucket:                                                                                        "firehose-bucket"
      bucket_domain_name:                                                                            <computed>
      bucket_regional_domain_name:                                                                   <computed>
      force_destroy:                                                                                 "false"
      hosted_zone_id:                                                                                <computed>
      region:                                                                                        <computed>
      request_payer:                                                                                 <computed>
      versioning.#:                                                                                  <computed>
      website_domain:                                                                                <computed>
      website_endpoint:                                                                              <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.firehose_iam_role.aws_iam_role.role
[0m      id:                                                                                            <computed>
      arn:                                                                                           <computed>
      assume_role_policy:                                                                            "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"firehose.amazonaws.com\"\n      }\n    }\n  ]\n}"
      create_date:                                                                                   <computed>
      force_detach_policies:                                                                         "false"
      max_session_duration:                                                                          "3600"
      name:                                                                                          "FirehoseIamRole"
      path:                                                                                          "/"
      unique_id:                                                                                     <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.invoke_lambda_policy.aws_iam_policy.policy
[0m      id:                                                                                            <computed>
      arn:                                                                                           <computed>
      description:                                                                                   "Policy created by terraform"
      name:                                                                                          "S3ReadWrite"
      path:                                                                                          "/"
      policy:                                                                                        "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"lambda:InvokeFunction\",\n        \"lambda:GetFunctionConfiguration\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}"
[0m
[0m[36m [36m<=[0m [36mmodule.s3ReadWrite.data.aws_iam_policy_document.policy_document
[0m      id:                                                                                            <computed>
      json:                                                                                          <computed>
      statement.#:                                                                                   "1"
      statement.0.actions.#:                                                                         "6"
      statement.0.actions.2071725391:                                                                "s3:GetObject"
      statement.0.actions.315547055:                                                                 "s3:PutObject"
      statement.0.actions.329996733:                                                                 "s3:AbortMultipartUpload"
      statement.0.actions.3948445924:                                                                "s3:GetBucketLocation"
      statement.0.actions.486976917:                                                                 "s3:ListBucket"
      statement.0.actions.548422:                                                                    "s3:ListBucketMultipartUploads"
      statement.0.effect:                                                                            "Allow"
      statement.0.resources.#:                                                                       <computed>
[0m
[0m[33m  [33m~[0m [33mmodule.s3ReadWrite.aws_iam_policy.policy
[0m      policy:                                                                                        "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:ListBucketMultipartUploads\",\n        \"s3:ListBucket\",\n        \"s3:GetObject\",\n        \"s3:GetBucketLocation\",\n        \"s3:AbortMultipartUpload\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}" => "${data.aws_iam_policy_document.policy_document.json}"
[0m
[0m
